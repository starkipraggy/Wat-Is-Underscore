1 - Uses 1
assign a;
Select a such that Uses(a, "a")
11
5000
2 - Uses 2
stmt s;
Select s such that Uses(s, "c")
2, 4, 11
5000
3 - Uses 3
variable v;
Select v such that Uses(1, v)
b, c, d, e, f
5000
4 - Modifies 1
stmt s;
Select s such that Modifies(s, "c")
5
5000
5 - Modifies 2
variable v;
Select v such that Modifies(s, v)
a, b, c, d, i, j
5000
6 - Modifies 3
assign a;
Select a such that Modifies(a, "a")
1, 3
5000
7 - Follows 1
assign a;
Select a such that Follows(2, a)
11
5000
8 - Follows 2
stmt s;
Select s such that Follows(1, a)
none
5000
9 - Follows 3
stmt s;
Select s such that Follows(7, a)
8
5000
10 - Follows* 1
assign a;
Select a such that Follows*(3, a)
3, 4, 5, 6
5000
11 - Follows* 2
while w; assign a;
Select w such that Follows*(w, a)
3
5000
12 - Follows* 3
stmt s;
Select s such that Follows*(s, 1)
none
5000
13 - Parent 1
stmt s;
Select s such that Parent(1, s)
none
5000;
14 - Parent 2
stmt s, s1;
Select s such that Parent(s, s1)
2, 7, 9
5000
15 - Parent 3
assign a;
Select a such that Parent(a, 7)
none
5000
16 - Parent* 1
while w;
Select w such that Parent*(w, 11)
none
5000
17 - Parent* 2
while w;
Select w such that Parent*(w, a)
2, 7, 9
5000
18 - Parent* 3
assign a; while w;
Select a such that Parent*(w, a)
3, 4, 5, 6, 8, 10
5000
19 - Wrong Pattern Tree
assign a;
Select a pattern a(_, _"c+d"_)
none
5000
20 - Correct Pattern Tree
assign a;
Select a pattern a(_, _"b + c + d"_)
1
5000
21 - Correct Pattern Tree
assign a;
Select s pattern a(_, "d * a")
11
5000
22 - 3 patterns
while w; stmt s,s1;
Select w such that Parent(w, s) and Parent(s, s1) pattern w("i", _)
2
5000
23 - 3 patterns
assign a; stmt s;
Select a such that Uses(a, "b") and Parent(s, a) pattern a("a", _)
3
5000
24 - check synonyms
stmt s;
Select s such that Uses(s, "b") and Modifies(s, "c") pattern s("i", _)
2
5000
25 - 3 patterns
stmt s; variable v;
Select s such that Uses(s, v) and Modifies(s, v) pattern s(_, _"d"_)
11
5000
26 - 3 patterns
stmt s;
Select BOOLEAN such that Uses(7, "j") and Parent(s, 7) pattern a(_,"a")
true
5000
27 - test Boolean
if ifstmt; stmt s; while w;
Select ifstmt such that Follows*(3, s) and Parent(w, 10) pattern a("c", _)
true
5000
28 - check common synonym
stmt s;
Select s such that Modifies(s, "j") and Uses(s, "j") pattern s("j", _)
none 
5000
29 - Test odd combinations
stmt s,s1;
Select s such that Uses(s,k) and Parent*(s,s1)
9
5000
30 - check common synonym but different stmt
assign a; stmt s;
Select a such that Modifies(a, "b") pattern s("a", _)
4
5000
31 - check reverse combination
variable v; stmt s,s1;
Select v such that Modifies(s, v) and Follows(s1, s) pattern s1(v, _)
a
5000